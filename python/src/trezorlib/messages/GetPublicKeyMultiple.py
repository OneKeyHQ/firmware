# Automatically generated by pb2py
# fmt: off
from .. import protobuf as p

from .BIP32Address import BIP32Address

if __debug__:
    try:
        from typing import Dict, List  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
        EnumTypeInputScriptType = Literal[0, 1, 2, 3, 4]
    except ImportError:
        pass


class GetPublicKeyMultiple(p.MessageType):
    MESSAGE_WIRE_TYPE = 10210

    def __init__(
        self,
        *,
        addresses: List[BIP32Address] = None,
        ecdsa_curve_name: str = None,
        show_display: bool = None,
        coin_name: str = "Bitcoin",
        script_type: EnumTypeInputScriptType = 0,
        ignore_xpub_magic: bool = None,
    ) -> None:
        self.addresses = addresses if addresses is not None else []
        self.ecdsa_curve_name = ecdsa_curve_name
        self.show_display = show_display
        self.coin_name = coin_name
        self.script_type = script_type
        self.ignore_xpub_magic = ignore_xpub_magic

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('addresses', BIP32Address, p.FLAG_REPEATED),
            2: ('ecdsa_curve_name', p.UnicodeType, None),
            3: ('show_display', p.BoolType, None),
            4: ('coin_name', p.UnicodeType, "Bitcoin"),  # default=Bitcoin
            5: ('script_type', p.EnumType("InputScriptType", (0, 1, 2, 3, 4)), 0),  # default=SPENDADDRESS
            6: ('ignore_xpub_magic', p.BoolType, None),
        }
