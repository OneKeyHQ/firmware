image: registry.gitlab.com/satoshilabs/trezor/trezor-firmware/trezor-firmware-env.nix

# Crypto

crypto test:
  stage: test
  only:
    changes:
      - .gitlab-ci.yml
      - ci/**/*
      - crypto/**/*
  needs:
    - crypto build
  script:
    - ./crypto/tests/aestst
    - ./crypto/tests/test_check
    - ./crypto/tests/test_openssl 1000
    - nix-shell --run "cd crypto && ITERS=10 poetry run pytest --junitxml=tests/junit.xml tests"
    - nix-shell --run "CK_TIMEOUT_MULTIPLIER=20 valgrind -q --error-exitcode=1 ./crypto/tests/test_check"
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - tests/junit.xml
    reports:
      junit: tests/junit.xml
    expire_in: 1 week
    when: always


# Legacy

legacy test:
  stage: test
  needs:
    - legacy emu regular debug build
  variables:
    EMULATOR: "1"
  script:
    - nix-shell --run "poetry run legacy/script/test"
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - tests/junit.xml
    reports:
      junit: tests/junit.xml
    expire_in: 1 week
    when: always

legacy btconly test:
  stage: test
  needs:
    - legacy emu btconly debug build
  variables:
    EMULATOR: "1"
    EMULATOR_BINARY: "firmware/trezor-bitcoinonly.elf"
    TREZOR_PYTEST_SKIP_ALTCOINS: 1
  script:
    - nix-shell --run "poetry run legacy/script/test"
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - tests/junit.xml
    reports:
      junit: tests/junit.xml
    expire_in: 1 week
    when: always


legacy upgrade test:
  stage: test
  needs:
    - legacy emu regular debug build
  variables:
    TREZOR_UPGRADE_TEST: "legacy"
  script:
    - nix-shell --run "tests/download_emulators.sh"
    - nix-shell --run "poetry run pytest --junitxml=tests/junit.xml tests/upgrade_tests"
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - tests/junit.xml
    reports:
      junit: tests/junit.xml
    expire_in: 1 week
    when: always


# Python

python test:
  stage: test
  needs: []
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  only:
    changes:
      - poetry.lock
      - .gitlab-ci.yml
      - ci/**/*
      - common/**/*
      - python/**/*
  script:
    - nix-shell --arg fullDeps true --run "cd python && poetry run tox"


# Storage

storage test:
  stage: test
  only:
    changes:
      - .gitlab-ci.yml
      - ci/**/*
      - storage/**/*
  needs: []
  script:
    - nix-shell --run "poetry run make -C storage/tests build"
    - nix-shell --run "poetry run make -C storage/tests tests_all"
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - tests/junit.xml
    reports:
      junit: tests/junit.xml
    expire_in: 1 week
    when: always

# Hardware
hardware legacy regular device test:
  stage: test
  only:
    - schedules  # nightly build
    - /^legacy\//
    - /^release\//
    - /^secfix\//
  tags:
    - tpmb
  needs:
    - legacy fw regular debug build
  script:
    - cd ci/hardware_tests
    - nix-shell --run "./record_video.sh ${CI_COMMIT_SHORT_SHA} start"
    - nix-shell --run "cd ../.. && poetry install"
    - nix-shell --run "poetry run python bootstrap.py"
    - nix-shell --run "poetry run python bootstrap.py ../../trezor-*.bin"
    - nix-shell --run "poetry run pytest ../../tests/device_tests"
    - nix-shell --run "./record_video.sh ${CI_COMMIT_SHORT_SHA} stop"
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - ci/hardware_tests/video*.mp4
    expire_in: 2 days
    when: always

hardware legacy btconly device test:
  stage: test
  variables:
    TREZOR_PYTEST_SKIP_ALTCOINS: 1
  only:
    - schedules  # nightly build
    - /^legacy\//
    - /^release\//
    - /^secfix\//
  tags:
    - tpmb
  needs:
    - legacy fw btconly debug build
  script:
    - cd ci/hardware_tests
    - nix-shell --run "./record_video.sh ${CI_COMMIT_SHORT_SHA} start"
    - nix-shell --run "cd ../.. && poetry install"
    - nix-shell --run "poetry run python bootstrap.py"
    - nix-shell --run "poetry run python bootstrap.py ../../trezor-*.bin"
    - nix-shell --run "poetry run pytest ../../tests/device_tests"
    - nix-shell --run "./record_video.sh ${CI_COMMIT_SHORT_SHA} stop"
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - ci/hardware_tests/video*.mp4
    expire_in: 2 days
    when: always
