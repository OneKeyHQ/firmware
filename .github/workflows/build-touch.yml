name: "build-touch"

on:
  schedule:
    - cron: '30 19 * * 0,1,2,3,4'
  workflow_dispatch:

jobs:
  build-touch:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2.3.4

      - name: "Build boardloader bootloader firmware"
        env:
          PRODUCTION: 1
        run: |
          sudo apt-get install wget make autoconf automake libtool curl make g++ unzip scons llvm-dev libclang-dev clang libsdl2-dev libsdl2-image-dev
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
          source $HOME/.poetry/env
          wget -q https://armkeil.blob.core.windows.net/developer/Files/downloads/gnu-rm/10.3-2021.10/gcc-arm-none-eabi-10.3-2021.10-x86_64-linux.tar.bz2
          tar -jxf gcc-arm-none-eabi-10.3-2021.10-x86_64-linux.tar.bz2
          export PATH="$PWD/gcc-arm-none-eabi-10.3-2021.10/bin:$PATH"
          git clone https://github.com/protocolbuffers/protobuf.git
          cd protobuf
          git submodule update --init --recursive
          sudo ./autogen.sh
          sudo ./configure
          sudo make
          sudo make install
          sudo ldconfig
          cd ..
          rustup target add thumbv7em-none-eabihf
          git submodule update --init --recursive
          poetry install
          cd core
          poetry run make build_boardloader
          poetry run make build_bootloader
          poetry run make build_firmware
          poetry run tools/headertool.py -h build/firmware/touch*Stable*.bin  -S 1:${{ secrets.SECRET_KEY_1 }} -S 2:${{ secrets.SECRET_KEY_2 }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: firmware-${{ github.sha }}
          path: |
            ./core/build/boardloader/boardloader.bin
            ./core/build/bootloader/bootloader.bin
            ./core/build/firmware/touch*Stable*.bin

      - name: Set Env
        run: |
          artifacts_url="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          echo "ARTIFACTS_URL=$artifacts_url" >> $GITHUB_ENV

      - name: 'Notify to Slack'
        uses: onekeyhq/onekey-github-actions/notice-slack-app-update@main
        with:
          web-hook-url: ${{ secrets.SLACK_DEV_RELEASE_WEBHOOK }}
          artifact-type: Firmware
          artifact-name: Touch-Hardware-Firmware
          artifact-bundle-id: 'so.onekey.firmware'
          artifact-download-url: '${{ env.ARTIFACTS_URL }}'
          change-log: 'Download [Artifacts] at the bottom of page.'
          custom-issue-url: ''
          custom-message-title: ''
          custom-message-payload: ''
