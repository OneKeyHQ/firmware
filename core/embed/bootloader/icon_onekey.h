// clang-format off
static const uint8_t toi_icon_bluetooth[] = {
    // magic
    'T', 'O', 'I', 'f',
    // width (16-bit), height (16-bit)
    0x11, 0x00, 0x1a, 0x00,
    // compressed data length (32-bit)
    0x57, 0x00, 0x00, 0x00,
    // compressed data
    0x9d, 0x92, 0xdb, 0x0a, 0x00, 0x20, 0x08, 0x43, 0xf7, 0xff, 0x3f, 0xbd, 0xa0, 0x88, 0x32, 0x2f, 0x93, 0x7c, 0xca, 0x3c, 0x94, 0x9b, 0x02, 0x36, 0x38, 0x03, 0x45, 0x90, 0x8a, 0x21, 0x15, 0x43, 0x2a, 0x66, 0x55, 0x2c, 0x63, 0xe9, 0x9d, 0xd1, 0xc5, 0x4b, 0xe4, 0x8c, 0x27, 0xa2, 0x73, 0xa4, 0xe9, 0x64, 0x51, 0xa7, 0xd9, 0xaf, 0x5e, 0xad, 0xaa, 0xf7, 0xdd, 0xea, 0xbe, 0xd0, 0xe9, 0x22, 0x53, 0x92, 0xa9, 0xad, 0x1d, 0xd3, 0xae, 0xeb, 0xc9, 0xe9, 0xe9, 0x77, 0x36, 0xe8, 0xdf, 0x57, 0xb5, 0xc9, 0x40, 0x4d, 0xdc, 0x37, 0x03,
};

static const uint8_t toi_icon_usb[] = {
    // magic
    'T', 'O', 'I', 'f',
    // width (16-bit), height (16-bit)
    0x20, 0x00, 0x20, 0x00,
    // compressed data length (32-bit)
    0x5d, 0x00, 0x00, 0x00,
    // compressed data
    0xcd, 0x92, 0x41, 0x0a, 0x00, 0x20, 0x08, 0x04, 0xfd, 0xff, 0xa7, 0x2d, 0x88, 0xa0, 0xa4, 0x42, 0x1b, 0x28, 0xf7, 0x9a, 0x63, 0xba, 0xae, 0x48, 0x66, 0x69, 0x15, 0xa3, 0x49, 0x07, 0xc6, 0xeb, 0xa0, 0x1f, 0x3c, 0xf7, 0x6f, 0xe4, 0xef, 0x66, 0x79, 0xcf, 0xcf, 0x15, 0x51, 0xde, 0x56, 0xe5, 0xe1, 0xfb, 0x9b, 0x37, 0x33, 0xeb, 0xff, 0xa3, 0x89, 0x57, 0x23, 0x6f, 0x6a, 0xd7, 0xbc, 0x3f, 0xf5, 0xbb, 0x7d, 0xfc, 0x1d, 0x1a, 0x11, 0xcd, 0xdb, 0xed, 0xd4, 0xa7, 0x0e, 0x02, 0xc4, 0x78, 0x36, 0xc1, 0x6f, 0x0f, 0xb8, 0x87, 0xfc, 0x02, 0xf4, 0x7e, 0xf9, 0x55, 0x00,
};

static const uint8_t toi_icon_status0[] = {
    // magic
    'T', 'O', 'I', 'f',
    // width (16-bit), height (16-bit)
    0x20, 0x00, 0x20, 0x00,
    // compressed data length (32-bit)
    0x3e, 0x00, 0x00, 0x00,
    // compressed data
    0xed, 0x8c, 0x41, 0x0e, 0x00, 0x20, 0x08, 0xc3, 0xf6, 0xff, 0x4f, 0xe3, 0xd5, 0x88, 0x33, 0x22, 0x31, 0x24, 0x64, 0x3d, 0xb2, 0x16, 0xe0, 0x17, 0x36, 0x51, 0xd1, 0x57, 0x61, 0x07, 0x72, 0xf5, 0xcd, 0x07, 0xe6, 0xc5, 0xfa, 0xd8, 0xb2, 0x5a, 0x2f, 0x9b, 0x7a, 0xf5, 0xea, 0x7b, 0xf4, 0x7b, 0x8b, 0x2f, 0xde, 0xf2, 0x1e, 0xbb, 0x33, 0x8f, 0x01, 0x64, 0x3e, 0xa0, 0x1d, 0x03,
};

static const uint8_t toi_icon_status25[] = {
    // magic
    'T', 'O', 'I', 'f',
    // width (16-bit), height (16-bit)
    0x20, 0x00, 0x20, 0x00,
    // compressed data length (32-bit)
    0x44, 0x00, 0x00, 0x00,
    // compressed data
    0x63, 0x60, 0xa0, 0x15, 0xf8, 0x8f, 0x04, 0x06, 0x42, 0xff, 0x40, 0x81, 0xff, 0x78, 0x00, 0x65, 0xba, 0x89, 0x31, 0x01, 0x97, 0x3a, 0xd2, 0xf4, 0x93, 0x26, 0x83, 0xae, 0x8a, 0x1c, 0xb9, 0x51, 0xfd, 0xa3, 0xfa, 0x87, 0x93, 0xfe, 0x95, 0x8e, 0xa8, 0x70, 0x24, 0xe9, 0xc7, 0xae, 0x0a, 0xb7, 0x0c, 0xa6, 0x2a, 0x4c, 0x75, 0xb8, 0xc4, 0x71, 0xa9, 0xc3, 0x05, 0x18, 0x18, 0x28, 0x31, 0x81, 0x61, 0xd8, 0x01, 0x00,
};

static const uint8_t toi_icon_status50[] = {
    // magic
    'T', 'O', 'I', 'f',
    // width (16-bit), height (16-bit)
    0x20, 0x00, 0x20, 0x00,
    // compressed data length (32-bit)
    0x42, 0x00, 0x00, 0x00,
    // compressed data
    0xed, 0x92, 0x31, 0x0e, 0x00, 0x20, 0x08, 0xc4, 0xee, 0xff, 0x9f, 0xc6, 0xd5, 0x08, 0x67, 0x44, 0x62, 0x48, 0x90, 0x8e, 0x5e, 0xcb, 0x24, 0xf0, 0x0a, 0x99, 0xc8, 0xe8, 0xb3, 0x90, 0x0d, 0xb1, 0xfa, 0xe4, 0x02, 0xf3, 0x7c, 0xbd, 0x6f, 0x59, 0xad, 0x9b, 0xad, 0xfb, 0x5a, 0xbd, 0xf5, 0x6f, 0xbb, 0xff, 0xa3, 0xb7, 0x2d, 0xbe, 0x68, 0x4b, 0x7b, 0xec, 0x9d, 0x79, 0x0c, 0x20, 0x72, 0x01, 0xe5, 0x18,
};

static const uint8_t toi_icon_status75[] = {
    // magic
    'T', 'O', 'I', 'f',
    // width (16-bit), height (16-bit)
    0x20, 0x00, 0x20, 0x00,
    // compressed data length (32-bit)
    0x42, 0x00, 0x00, 0x00,
    // compressed data
    0xed, 0x91, 0x31, 0x0e, 0x00, 0x20, 0x08, 0xc4, 0xee, 0xff, 0x9f, 0xc6, 0xd5, 0x08, 0x67, 0x44, 0x62, 0x48, 0x90, 0x8e, 0x5e, 0xcb, 0x22, 0xf0, 0x0a, 0x99, 0xc8, 0xe8, 0xb3, 0x90, 0x0d, 0xb1, 0xfa, 0xe4, 0x02, 0xf3, 0x7c, 0xbd, 0x6f, 0x59, 0xad, 0x9b, 0xad, 0x5a, 0x6f, 0xfd, 0x5b, 0xf7, 0xdd, 0xff, 0xd0, 0xdb, 0x16, 0x5f, 0xb4, 0xa5, 0x3d, 0xf6, 0xce, 0x3c, 0x06, 0x10, 0xb9, 0x80, 0x72, 0x0c,
};

static const uint8_t toi_icon_status100[] = {
    // magic
    'T', 'O', 'I', 'f',
    // width (16-bit), height (16-bit)
    0x20, 0x00, 0x20, 0x00,
    // compressed data length (32-bit)
    0x40, 0x00, 0x00, 0x00,
    // compressed data
    0xed, 0x8f, 0x41, 0x0a, 0x00, 0x30, 0x08, 0xc3, 0xfa, 0xff, 0x4f, 0xbb, 0xab, 0x4c, 0x2b, 0x13, 0x19, 0x82, 0x98, 0xe3, 0x9a, 0x08, 0x03, 0x7e, 0x21, 0x8a, 0x8e, 0xbe, 0x0b, 0x09, 0xa8, 0xd5, 0x2f, 0x17, 0x98, 0x97, 0xeb, 0x73, 0xcb, 0x6d, 0x79, 0xff, 0xd0, 0xdb, 0xf6, 0xdb, 0x6f, 0x3f, 0xb7, 0xf7, 0x2d, 0xbe, 0x58, 0xcb, 0x7a, 0xec, 0x9d, 0x79, 0x0c, 0xa0, 0x72, 0x01, 0xe3, 0x38,
};

static const uint8_t toi_icon_charging[] = {
    // magic
    'T', 'O', 'I', 'f',
    // width (16-bit), height (16-bit)
    0x20, 0x00, 0x20, 0x00,
    // compressed data length (32-bit)
    0x93, 0x00, 0x00, 0x00,
    // compressed data
    0x63, 0x60, 0xa0, 0x15, 0xf8, 0x8f, 0x04, 0x06, 0x42, 0xff, 0x40, 0x81, 0xff, 0x78, 0x00, 0x65, 0xba, 0x89, 0x31, 0x01, 0x97, 0x3a, 0xd2, 0xf4, 0x93, 0x26, 0x83, 0xae, 0x0a, 0x44, 0xcb, 0x66, 0xa0, 0x42, 0x64, 0x39, 0x7a, 0xea, 0x0f, 0xe3, 0xa3, 0x4c, 0xff, 0xbc, 0xab, 0x94, 0xe8, 0x2f, 0x0b, 0xec, 0xdb, 0x42, 0xbe, 0x7e, 0xdb, 0xd5, 0xcf, 0xf7, 0x52, 0xe2, 0xfe, 0xf5, 0xe2, 0xff, 0xff, 0xeb, 0x76, 0x92, 0xab, 0xdf, 0x76, 0x35, 0x2c, 0xcd, 0xac, 0xfb, 0x4e, 0x8e, 0x7e, 0x90, 0xed, 0x10, 0x60, 0xba, 0x9a, 0xdc, 0xf0, 0x03, 0xb9, 0x01, 0x64, 0x3b, 0xb9, 0xfa, 0xd3, 0xf4, 0x9f, 0xef, 0x01, 0xd9, 0x4e, 0xae, 0xfe, 0xbe, 0x2d, 0x65, 0x81, 0x94, 0xc4, 0xff, 0x7a, 0x71, 0xca, 0xd2, 0x6f, 0x9a, 0x3e, 0x65, 0xfa, 0x11, 0x90, 0x9e, 0xfa, 0xb1, 0xab, 0xc2, 0x2d, 0x83, 0xa9, 0x0a, 0x53, 0x1d, 0x2e, 0x71, 0x5c, 0xea, 0x70, 0x01, 0x06, 0x06, 0x4a, 0x4c, 0x60, 0x18, 0x76, 0x00, 0x00,
};

static const uint8_t toi_icon_onekey[] = {
    // magic
    'T', 'O', 'I', 'f',
    // width (16-bit), height (16-bit)
    0x4a, 0x00, 0x4a, 0x00,
    // compressed data length (32-bit)
    0xe7, 0x00, 0x00, 0x00,
    // compressed data
    0xed, 0xd2, 0x49, 0x0e, 0xc3, 0x30, 0x0c, 0x43, 0x51, 0xde, 0xff, 0xd2, 0xec, 0xb6, 0x40, 0x11, 0x4f, 0xa2, 0x2c, 0x36, 0xd0, 0x5f, 0x66, 0x90, 0x5f, 0x02, 0x01, 0xbb, 0x71, 0x33, 0x24, 0xc6, 0x60, 0x5e, 0x1a, 0xb5, 0x8c, 0x09, 0xb9, 0x79, 0x22, 0x2e, 0x5e, 0xc8, 0x4f, 0xb4, 0xa7, 0xe2, 0xc5, 0xfc, 0x44, 0x6b, 0x2a, 0x16, 0xe4, 0x27, 0x1a, 0xab, 0x58, 0x98, 0x9f, 0xe8, 0x49, 0xe5, 0x67, 0xa2, 0x41, 0xfe, 0x26, 0x97, 0x0d, 0xf0, 0x36, 0xe9, 0xb6, 0x32, 0xbe, 0x03, 0xfa, 0xbf, 0xf4, 0x66, 0x13, 0xa9, 0xfa, 0x36, 0xdd, 0xb4, 0x36, 0xfd, 0xab, 0x89, 0x74, 0x33, 0x69, 0x6a, 0x53, 0x9b, 0xda, 0xd4, 0x75, 0x27, 0x1b, 0xe5, 0xb7, 0xdf, 0x0e, 0x32, 0x0c, 0xf2, 0x13, 0xd5, 0xa8, 0xb0, 0x50, 0xa5, 0x69, 0xe5, 0xfa, 0x4d, 0xd1, 0xfe, 0xdd, 0x0a, 0xd1, 0xf7, 0x13, 0x8e, 0xa6, 0x7b, 0xaa, 0x95, 0xf3, 0xda, 0xd4, 0x26, 0x17, 0xd3, 0xc9, 0x5b, 0xc0, 0xec, 0xc4, 0xf9, 0x13, 0xe3, 0xe9, 0xef, 0x30, 0xcd, 0xce, 0x8c, 0x88, 0x14, 0xa6, 0xdf, 0xf7, 0x47, 0xf7, 0xd6, 0x67, 0x47, 0x55, 0x4f, 0x45, 0xe6, 0x92, 0x19, 0xaa, 0xd8, 0x54, 0x52, 0xaf, 0x8a, 0xcf, 0x24, 0x95, 0x2e, 0xcd, 0x34, 0x86, 0xca, 0x99, 0x14, 0x9d, 0xa5, 0x49, 0xf7, 0xbf, 0xf3, 0x4c, 0xf5, 0x2a, 0xed, 0x66, 0xe6, 0x99, 0x6a, 0x55, 0x78, 0xcc, 0x4f, 0x54, 0xa5, 0xc2, 0x34, 0x3f, 0xd1, 0x6d, 0x15, 0x96, 0xf3, 0x13, 0xdd, 0x52, 0xe1, 0x20, 0x37, 0x4f, 0xa6, 0x0b, 0x82, 0xdc, 0x3c, 0x3a, 0x19, 0x12, 0xcb, 0xb7, 0x7c, 0x00,
};

static const uint8_t toi_icon_next[] = {
    // magic
    'T', 'O', 'I', 'f',
    // width (16-bit), height (16-bit)
    0x78, 0x00, 0x40, 0x00,
    // compressed data length (32-bit)
    0x1c, 0x01, 0x00, 0x00,
    // compressed data
    0xed, 0xd2, 0xb1, 0x0d, 0x83, 0x30, 0x14, 0x84, 0xe1, 0x2b, 0x32, 0x00, 0x25, 0x05, 0x4d, 0xe6, 0x43, 0x2c, 0xc1, 0x20, 0x2c, 0xc3, 0x30, 0x8c, 0xe0, 0xd2, 0x91, 0x82, 0x50, 0x20, 0x80, 0x8d, 0x13, 0x48, 0x78, 0x77, 0xfc, 0xaf, 0x75, 0xf3, 0xe9, 0x0c, 0xa4, 0x95, 0xb7, 0xe7, 0x3a, 0x1c, 0xd6, 0xd9, 0xa4, 0xc7, 0xa9, 0xb3, 0xfa, 0xcc, 0xd6, 0x7d, 0xd5, 0x56, 0xac, 0xfb, 0x98, 0x6d, 0x59, 0xbf, 0x13, 0x5b, 0xb4, 0x7e, 0x6e, 0xb6, 0xac, 0x4d, 0x17, 0x5b, 0xd7, 0xa6, 0x89, 0x19, 0xb4, 0xdb, 0xc5, 0x2c, 0xda, 0x6d, 0x62, 0x26, 0x6d, 0x5c, 0xcc, 0xa6, 0x0d, 0x8b, 0x19, 0xb5, 0xeb, 0x62, 0x56, 0xed, 0x9a, 0x58, 0xcb, 0xcb, 0xac, 0x9d, 0x8b, 0xd9, 0xb5, 0x79, 0x9b, 0xd5, 0x5a, 0xde, 0xf1, 0xc2, 0x0a, 0xda, 0xf1, 0xc2, 0x1a, 0xde, 0xd7, 0xc2, 0x5a, 0x5e, 0x15, 0xed, 0x20, 0xbe, 0xbc, 0xcc, 0x5e, 0x25, 0xed, 0x2f, 0xae, 0xac, 0x5c, 0xd3, 0x15, 0x65, 0xb5, 0xd7, 0xbb, 0xb3, 0x5f, 0x57, 0xf8, 0x67, 0x61, 0x49, 0x59, 0xf5, 0xaf, 0x5c, 0x63, 0xdd, 0xeb, 0x1a, 0xef, 0x63, 0xe2, 0x41, 0xeb, 0x7d, 0x57, 0xd8, 0xff, 0xcf, 0xde, 0x87, 0xc5, 0xf1, 0x17, 0x4c, 0x62, 0x36, 0x6d, 0xd8, 0xc4, 0xa8, 0x5d, 0x77, 0xb1, 0x6a, 0x97, 0x6d, 0xcc, 0xda, 0xb9, 0x8f, 0x5d, 0xfb, 0x2e, 0xe6, 0xd7, 0x2e, 0x8b, 0x99, 0xb5, 0x73, 0x31, 0xbb, 0x76, 0x2a, 0x56, 0xd0, 0xf6, 0xe2, 0xae, 0x70, 0x8d, 0x8a, 0xf6, 0xbf, 0x07, 0x68, 0x69, 0x2f, 0x2f, 0xbb, 0x57, 0x47, 0x0c, 0x68, 0x7a, 0xef, 0x37, 0x2d, 0xaf, 0xc6, 0xc2, 0x18, 0xa5, 0xb0, 0x30, 0x26, 0x69, 0x69, 0xd9, 0xc5, 0xc0, 0xe5, 0xe5, 0x15, 0x63, 0x35, 0x2d, 0x2d, 0xa3, 0x18, 0xd1, 0xb4, 0xb4, 0x4c, 0x62, 0x6c, 0x4e, 0x4b, 0xcb, 0x20, 0x46, 0x72, 0x5a, 0x5a, 0xbb, 0x66, 0x7c, 0x95, 0x2d, 0x6b, 0x56, 0x63, 0x87, 0x94, 0xac, 0x36, 0xd4, 0x38, 0x2c, 0xeb, 0xd2, 0x07,
};

static const uint8_t toi_icon_previous[] = {
    // magic
    'T', 'O', 'I', 'f',
    // width (16-bit), height (16-bit)
    0x78, 0x00, 0x40, 0x00,
    // compressed data length (32-bit)
    0x15, 0x01, 0x00, 0x00,
    // compressed data
    0xed, 0xd2, 0xb1, 0x0d, 0x83, 0x30, 0x14, 0x84, 0xe1, 0x2b, 0x32, 0x00, 0x25, 0x85, 0x9b, 0xcc, 0x87, 0x58, 0x82, 0x41, 0x58, 0x86, 0x61, 0x3c, 0x82, 0xcb, 0xa4, 0x09, 0x02, 0x44, 0x8c, 0xed, 0x00, 0x0a, 0xef, 0x8e, 0xff, 0x55, 0x20, 0x9a, 0x4f, 0x07, 0x50, 0x56, 0x3d, 0x5c, 0xeb, 0x70, 0x5a, 0x57, 0x93, 0x9e, 0xa7, 0xae, 0xba, 0x2b, 0x5b, 0x8f, 0x55, 0x5b, 0xb1, 0x1e, 0x63, 0xb6, 0x65, 0xdd, 0x27, 0xb6, 0x68, 0xfd, 0xdd, 0x6c, 0x59, 0x5b, 0x2e, 0xb6, 0xae, 0x2d, 0x13, 0x33, 0x68, 0xf3, 0xc5, 0x2c, 0xda, 0x3c, 0x31, 0x93, 0x36, 0x2d, 0x66, 0xd3, 0x6e, 0x8b, 0x19, 0xb5, 0x71, 0x31, 0xab, 0x36, 0x26, 0xd6, 0xf2, 0x32, 0x6b, 0xd7, 0x62, 0x76, 0x6d, 0x3d, 0x54, 0x9d, 0x96, 0x77, 0xbe, 0xb0, 0x82, 0x76, 0xbe, 0xb0, 0x86, 0x77, 0x5a, 0x58, 0xcb, 0xab, 0xa2, 0x1d, 0xc5, 0xb7, 0x97, 0xd9, 0xab, 0xa4, 0xfd, 0xd7, 0x35, 0x6d, 0xe8, 0xbd, 0x6b, 0x5a, 0x15, 0xed, 0xeb, 0x93, 0x82, 0x78, 0xd2, 0x2a, 0x88, 0x97, 0x5a, 0x76, 0xf1, 0x5a, 0xcb, 0x2c, 0x9e, 0x6b, 0x9b, 0x76, 0xf9, 0xc4, 0xae, 0xfd, 0xfe, 0x86, 0x59, 0xcb, 0x2c, 0x8e, 0xbb, 0x18, 0xc5, 0xdb, 0x26, 0x36, 0x71, 0xda, 0xc3, 0x25, 0xf6, 0x2e, 0x6d, 0x99, 0xc4, 0xa1, 0xb7, 0xee, 0x0d, 0x7d, 0xce, 0x72, 0xa3, 0xd8, 0x3b, 0xfb, 0xff, 0xb3, 0x77, 0xa1, 0x4f, 0xff, 0xa7, 0xb9, 0xdf, 0xdd, 0x57, 0x76, 0x80, 0x96, 0xf6, 0xf6, 0xb2, 0x7b, 0x75, 0xc4, 0x80, 0xa6, 0xf7, 0xf9, 0xd0, 0xf2, 0x6a, 0x2c, 0x8c, 0x59, 0x0a, 0x0b, 0x63, 0x91, 0x96, 0x96, 0x5d, 0x0c, 0xdc, 0x5e, 0x5e, 0x31, 0xa2, 0x69, 0x69, 0x19, 0xc5, 0x48, 0xa6, 0xa5, 0x65, 0x12, 0x23, 0x3b, 0x2d, 0x2d, 0x83, 0x18, 0xc5, 0x69, 0x69, 0xed, 0x9a, 0xb1, 0x2b, 0x5b, 0xd6, 0xaa, 0xc3, 0x01, 0x29, 0x59, 0x6d, 0xa8, 0x71, 0x5a, 0xd6, 0xa5, 0x6f,
};

static const uint8_t toi_icon_restart[] = {
    // magic
    'T', 'O', 'I', 'f',
    // width (16-bit), height (16-bit)
    0x40, 0x01, 0x3e, 0x00,
    // compressed data length (32-bit)
    0xb7, 0x03, 0x00, 0x00,
    // compressed data
    0xed, 0xd2, 0xbd, 0x8e, 0xa3, 0x30, 0x14, 0x05, 0xe0, 0x3c, 0x10, 0x4d, 0x24, 0x1a, 0x24, 0x5e, 0x00, 0xba, 0x69, 0x69, 0xa9, 0x52, 0x46, 0x54, 0xc8, 0x7d, 0x2a, 0x44, 0x49, 0x85, 0xe8, 0x98, 0x37, 0xa0, 0xe4, 0x09, 0x90, 0x68, 0x28, 0x23, 0xa5, 0x75, 0xe9, 0xd2, 0x25, 0x2b, 0xeb, 0xca, 0xb2, 0x49, 0x48, 0xa4, 0xd9, 0xf9, 0xf1, 0xee, 0xf8, 0xf8, 0x34, 0xb1, 0x7d, 0x7d, 0x93, 0xb9, 0xf3, 0x1d, 0x0e, 0x1f, 0x59, 0xc7, 0x0b, 0x82, 0xbc, 0xce, 0xe1, 0x5b, 0x16, 0xe6, 0x8a, 0xb8, 0x51, 0x88, 0x59, 0x22, 0xee, 0x0c, 0x62, 0x8a, 0x88, 0x2b, 0x83, 0x98, 0x1e, 0xe2, 0xca, 0x20, 0xa6, 0x86, 0x7c, 0x59, 0xde, 0x3f, 0x6a, 0x10, 0x33, 0x43, 0xbe, 0x3a, 0xd0, 0x87, 0xfc, 0x0f, 0x02, 0x31, 0x27, 0xc4, 0x9d, 0x40, 0xcc, 0x08, 0x71, 0x27, 0x10, 0xf3, 0x41, 0xdc, 0x09, 0xc4, 0x6c, 0x10, 0x77, 0x02, 0x31, 0x17, 0xc4, 0xa5, 0x40, 0x4c, 0x05, 0xf9, 0xa1, 0xbc, 0x43, 0x1f, 0xe2, 0x36, 0xf0, 0x87, 0xfc, 0x3b, 0xfe, 0x30, 0x0f, 0xc4, 0xa5, 0x40, 0x4c, 0x03, 0x71, 0x27, 0x10, 0x93, 0x40, 0xe0, 0x0f, 0xf1, 0xd3, 0x1f, 0xe6, 0x80, 0xb8, 0x14, 0x88, 0x29, 0x20, 0xf0, 0x87, 0xf8, 0xe9, 0xcf, 0xaf, 0xbf, 0x77, 0x2e, 0x79, 0x6c, 0x72, 0xbb, 0xce, 0x25, 0x13, 0x50, 0x80, 0xfc, 0x54, 0x78, 0xbc, 0x3e, 0x2c, 0x1e, 0x67, 0x13, 0x26, 0x83, 0xb8, 0xf2, 0xb7, 0xae, 0xb2, 0x4b, 0x93, 0xcf, 0x74, 0x1d, 0x1a, 0xd5, 0xa5, 0x5d, 0xfe, 0xbe, 0x43, 0xbb, 0xa8, 0x0e, 0x43, 0x83, 0xff, 0x90, 0x0f, 0xfe, 0x98, 0xa0, 0x5d, 0xc4, 0xab, 0x37, 0x12, 0xd8, 0x87, 0x9f, 0xe9, 0x3a, 0xca, 0xcf, 0xfa, 0x23, 0xc1, 0xf0, 0xe7, 0x97, 0x3f, 0x95, 0x76, 0x51, 0x27, 0x3c, 0xb6, 0xab, 0xb2, 0x89, 0x89, 0xa2, 0xce, 0x83, 0xc7, 0xf7, 0x11, 0x2f, 0x6a, 0x26, 0xec, 0x9b, 0x88, 0xe7, 0x01, 0x19, 0x7e, 0xf4, 0xa7, 0xab, 0x23, 0xbe, 0xff, 0x6b, 0xd2, 0x44, 0x75, 0x52, 0x1d, 0x64, 0x07, 0x7f, 0x7e, 0xfa, 0x2b, 0x6a, 0xd2, 0xa3, 0xf7, 0x4c, 0x50, 0x0d, 0xa9, 0xb4, 0x2b, 0x23, 0x3e, 0x4a, 0x7d, 0x23, 0x3b, 0xad, 0xcd, 0x54, 0x6f, 0x15, 0xa6, 0xa7, 0xb9, 0x34, 0xa7, 0x43, 0x93, 0x26, 0x74, 0x4e, 0x5a, 0xe7, 0xb2, 0xa8, 0xc9, 0xdc, 0xf1, 0x62, 0xd7, 0x41, 0xa1, 0xdf, 0xfe, 0xda, 0x65, 0x5d, 0xf7, 0x3d, 0x1d, 0x2f, 0xb7, 0xeb, 0x9e, 0x93, 0x7d, 0x7f, 0xe9, 0x89, 0x74, 0x99, 0xc5, 0xe3, 0x88, 0x1b, 0x7f, 0xe6, 0x15, 0xfc, 0xf9, 0xec, 0x2f, 0xe2, 0x74, 0x32, 0x97, 0x6a, 0xc7, 0x84, 0x16, 0x50, 0xd4, 0x79, 0x30, 0x34, 0xb4, 0xab, 0xce, 0xc6, 0x8d, 0xec, 0xaa, 0x73, 0x1e, 0x30, 0x61, 0xfa, 0x8c, 0x72, 0x2e, 0x69, 0xc7, 0xe3, 0xb9, 0x9c, 0x4b, 0xea, 0xad, 0x4f, 0xaa, 0x33, 0x13, 0xba, 0x0f, 0xc9, 0xa4, 0x3e, 0xd4, 0x6b, 0x68, 0x94, 0xb5, 0x3e, 0xd4, 0x1d, 0x64, 0xa7, 0x3a, 0xd0, 0xf7, 0x21, 0xbf, 0xd7, 0xdf, 0x28, 0xdb, 0x45, 0xa5, 0x0f, 0x69, 0xaf, 0x45, 0xd2, 0x8e, 0x9c, 0xa8, 0xf4, 0x21, 0xa9, 0x50, 0x9f, 0xdb, 0x85, 0x5e, 0xd2, 0x4d, 0x7a, 0xe2, 0x71, 0xbb, 0xa4, 0x09, 0xed, 0x48, 0x98, 0x79, 0xa7, 0x24, 0xf3, 0x98, 0xc7, 0xfa, 0x9e, 0xde, 0xf2, 0xd8, 0xf6, 0x37, 0xca, 0x88, 0x9b, 0x7a, 0xaa, 0x50, 0x1a, 0x91, 0xdf, 0xef, 0xef, 0x7e, 0xf5, 0xa1, 0x91, 0x41, 0xda, 0x28, 0x11, 0xa7, 0x7b, 0xe5, 0x88, 0x09, 0xba, 0x65, 0xc2, 0x76, 0xf3, 0xcc, 0x1f, 0x19, 0xd5, 0x5d, 0xe8, 0xed, 0xd6, 0x9f, 0xb6, 0x09, 0x7f, 0xbe, 0xfb, 0xab, 0xde, 0xe8, 0xae, 0x3a, 0xaf, 0x4f, 0x56, 0x51, 0x2b, 0x45, 0xe6, 0xed, 0x5c, 0x32, 0x61, 0xfb, 0xd9, 0xf7, 0x97, 0x07, 0x7d, 0x38, 0x4a, 0xf3, 0x6a, 0xeb, 0x6f, 0x5b, 0x0b, 0x7f, 0x3e, 0xf9, 0x1b, 0x1a, 0x26, 0x98, 0x20, 0x35, 0xeb, 0x9a, 0x4d, 0xb6, 0x81, 0x67, 0xfe, 0x8e, 0x97, 0xf4, 0x64, 0xeb, 0xe5, 0x31, 0x9d, 0xee, 0xfb, 0xcb, 0xa6, 0x47, 0xe9, 0xf0, 0x87, 0x90, 0x0a, 0x26, 0xd4, 0xe7, 0x88, 0xd3, 0x6e, 0x2e, 0xe9, 0xae, 0x3a, 0x93, 0x12, 0x65, 0x73, 0x9b, 0x34, 0xd1, 0xef, 0x8b, 0x7a, 0x68, 0x8c, 0x2c, 0x2d, 0xf7, 0xde, 0x5f, 0x7a, 0x92, 0x9d, 0x3a, 0x91, 0xdd, 0x28, 0xfb, 0x90, 0x09, 0xdd, 0x19, 0xfe, 0xe0, 0xcf, 0xf8, 0x53, 0x9a, 0xc8, 0x42, 0x1e, 0x18, 0x19, 0xb2, 0x8b, 0xb8, 0xa9, 0xb7, 0x3f, 0xe7, 0x81, 0xf6, 0x96, 0x4d, 0xd4, 0xa7, 0x0f, 0xf7, 0xfd, 0x91, 0x26, 0x1e, 0x6b, 0xb7, 0xf4, 0x3d, 0xf0, 0x87, 0x6c, 0xfd, 0x1d, 0x2f, 0x73, 0x69, 0x64, 0xe8, 0x5b, 0xa3, 0x40, 0x59, 0x19, 0x1a, 0x52, 0xa4, 0x2a, 0x8d, 0xa8, 0xad, 0x97, 0x3e, 0x54, 0xbb, 0xb9, 0xd4, 0xef, 0xc8, 0xa3, 0xe9, 0x43, 0x7d, 0x5f, 0xf9, 0xab, 0xce, 0x54, 0x61, 0x7b, 0x47, 0x7e, 0xbf, 0x3f, 0xad, 0xa1, 0x5d, 0xec, 0x1d, 0x8f, 0xfb, 0xb0, 0x5d, 0xc8, 0xa6, 0x76, 0x34, 0x4a, 0xba, 0x61, 0x22, 0x9b, 0x8a, 0x7a, 0xdb, 0xc7, 0xbc, 0x1b, 0x9a, 0xa2, 0xd6, 0x1e, 0x65, 0x57, 0xd4, 0x69, 0x92, 0x07, 0xba, 0xcf, 0x2b, 0x7f, 0x76, 0x07, 0xf3, 0xeb, 0x7c, 0xc8, 0xe1, 0xe0, 0xb3, 0x3f, 0xed, 0x4a, 0x76, 0x11, 0x57, 0xbb, 0x76, 0x59, 0xef, 0xd6, 0xed, 0x4a, 0x37, 0x11, 0xa7, 0xb7, 0x66, 0xf1, 0x98, 0x6e, 0x54, 0xb4, 0x31, 0x92, 0x9c, 0x9e, 0x64, 0x67, 0x57, 0xd2, 0xee, 0x95, 0x3f, 0xfd, 0x3b, 0x8c, 0x77, 0x5f, 0xf4, 0xf9, 0xee, 0x4f, 0x5b, 0xe9, 0x43, 0xda, 0xe7, 0xc1, 0xed, 0x6a, 0xdc, 0xb4, 0x8b, 0x31, 0x16, 0xf1, 0x3e, 0x34, 0x06, 0xe7, 0x32, 0x4d, 0x4c, 0x97, 0x88, 0x0f, 0x0d, 0xf5, 0x51, 0xfe, 0x8e, 0x97, 0x6c, 0xb2, 0x2b, 0xc9, 0xdc, 0x6b, 0x7f, 0xc7, 0x4b, 0x1f, 0x52, 0x07, 0xf8, 0xf3, 0x3d, 0xe9, 0x29, 0x0f, 0xf2, 0x20, 0x9b, 0xf6, 0xee, 0xe8, 0xc6, 0xa8, 0xdc, 0xbc, 0x4b, 0x6c, 0x93, 0xd9, 0xa4, 0x6a, 0xf7, 0x2b, 0x9f, 0x7e, 0xf3, 0xa6, 0x83, 0x1f, 0xfe, 0x20, 0x10, 0x71, 0xa9, 0x0f, 0xfe, 0x10, 0xf8, 0x43, 0x7c, 0xd5, 0x07, 0x81, 0x88, 0x6b, 0x7f, 0x10, 0x88, 0xb8, 0xd4, 0x07, 0x7f, 0x88, 0x5b, 0x7f, 0x10, 0x88, 0xb8, 0xd4, 0x07, 0x7f, 0x88, 0x5b, 0x7f, 0x10, 0x88, 0xb8, 0xd4, 0x07, 0x81, 0x88, 0x5b, 0x7d, 0x10, 0x88, 0xb8, 0xd5, 0x07, 0x81, 0x88, 0x5b, 0x7d, 0x10, 0x88, 0xb8, 0xd5, 0x07, 0x81, 0x88, 0x5b, 0x7d, 0x10, 0x88, 0xb8, 0xd5, 0x07, 0x83, 0x88, 0x5b, 0x7b, 0x30, 0x88, 0xb8, 0xb6, 0x07, 0x83, 0x88, 0x7b, 0x7d, 0x30, 0x88, 0xb8, 0x94, 0x07, 0x85, 0xc8, 0xf7, 0xc9, 0xfb, 0x03,
};

static const uint8_t toi_icon_cancel_new[] = {
    // magic
    'T', 'O', 'I', 'f',
    // width (16-bit), height (16-bit)
    0xc0, 0x00, 0x3e, 0x00,
    // compressed data length (32-bit)
    0x50, 0x03, 0x00, 0x00,
    // compressed data
    0xed, 0xd2, 0xad, 0x8e, 0xac, 0x30, 0x14, 0x07, 0x70, 0x1e, 0xa8, 0x66, 0x12, 0x0c, 0x09, 0x2f, 0x00, 0x6e, 0x2c, 0xb6, 0x6a, 0xe4, 0x04, 0x45, 0xf0, 0xa3, 0x08, 0x12, 0x45, 0x70, 0xec, 0x1b, 0x20, 0x79, 0x02, 0x12, 0x0c, 0x72, 0x92, 0xb1, 0x95, 0xc8, 0x4a, 0x6e, 0x9a, 0x73, 0xcf, 0x2d, 0xcc, 0xf7, 0x26, 0xbb, 0x7b, 0xf6, 0xa6, 0x87, 0x63, 0xa6, 0x9c, 0xb6, 0x43, 0x7f, 0xff, 0x7a, 0xde, 0x67, 0x9e, 0xdd, 0x89, 0xeb, 0x55, 0x79, 0xdf, 0xf2, 0xb0, 0x2b, 0x55, 0x0a, 0x6c, 0x49, 0x99, 0x01, 0x2b, 0xd2, 0x65, 0xc0, 0x7a, 0x74, 0x19, 0xb0, 0xda, 0x17, 0xd6, 0xc7, 0x67, 0x33, 0x60, 0xb3, 0xaf, 0x2f, 0xd6, 0xff, 0x3f, 0x12, 0x60, 0x27, 0xca, 0x04, 0xd8, 0x88, 0x32, 0x01, 0xf6, 0xa1, 0x4c, 0x80, 0x6d, 0x28, 0x13, 0x60, 0x17, 0xda, 0x04, 0x58, 0xe5, 0xc7, 0xea, 0x83, 0xf5, 0xa9, 0x8b, 0xfd, 0x7f, 0x93, 0x3f, 0x7b, 0xd0, 0x26, 0xc0, 0x1a, 0x94, 0x09, 0xb0, 0x04, 0xfb, 0xbb, 0xeb, 0xcf, 0x0e, 0xb4, 0x09, 0xb0, 0x82, 0xbb, 0xfe, 0x81, 0x8a, 0xa3, 0x38, 0x0a, 0x14, 0xbd, 0x04, 0xcd, 0x97, 0xd0, 0xe9, 0x07, 0xaa, 0x38, 0x8e, 0xd9, 0xf2, 0xf7, 0x51, 0x61, 0x57, 0xc5, 0x11, 0xa5, 0x7f, 0x57, 0x99, 0xef, 0xa8, 0x27, 0xfa, 0x9b, 0xf0, 0x13, 0x95, 0x0c, 0x2a, 0x5c, 0x6e, 0x1e, 0xca, 0xd3, 0xbb, 0xe4, 0x9f, 0x0c, 0xba, 0x41, 0x73, 0x15, 0x5e, 0xce, 0x76, 0x44, 0x77, 0x7e, 0x77, 0xfc, 0xe3, 0x83, 0x0a, 0xcd, 0x59, 0x75, 0x53, 0x4f, 0x81, 0x82, 0x77, 0xf9, 0x0c, 0xef, 0x96, 0x45, 0x0a, 0xf6, 0xff, 0x89, 0x93, 0xea, 0x26, 0x19, 0xb6, 0xa9, 0xe8, 0xc6, 0xbc, 0x2f, 0x8e, 0xf6, 0x5d, 0xa0, 0xd2, 0x32, 0x9f, 0xa5, 0xc0, 0x94, 0xb6, 0x15, 0x28, 0x29, 0x4c, 0xf7, 0x6e, 0xc6, 0xd1, 0xe3, 0x95, 0xb8, 0x2e, 0x8e, 0x5c, 0xf4, 0x8f, 0x0f, 0x70, 0xcf, 0x8b, 0xfd, 0x75, 0x27, 0x9f, 0x5b, 0xdf, 0x9a, 0xc4, 0x87, 0x31, 0x5b, 0xfe, 0x3d, 0x5d, 0x85, 0x1d, 0x58, 0x3f, 0x66, 0xf9, 0x0c, 0x79, 0x2d, 0x8b, 0x0a, 0xd7, 0x99, 0xed, 0x4e, 0x52, 0xdc, 0x5f, 0x09, 0xf6, 0xf5, 0x84, 0xeb, 0xcc, 0x2e, 0xb6, 0xe7, 0x8a, 0x7f, 0x3e, 0x83, 0xd9, 0xab, 0x94, 0xac, 0x12, 0x2a, 0xc3, 0x5d, 0x06, 0x7f, 0x15, 0x6e, 0xbb, 0x36, 0x81, 0x7a, 0x5a, 0x96, 0xeb, 0x95, 0x36, 0xbb, 0xeb, 0x75, 0xba, 0x49, 0x06, 0xb7, 0xfc, 0xe1, 0x9c, 0xbd, 0x7e, 0x3e, 0x0b, 0x9c, 0xcc, 0xcd, 0xce, 0x67, 0x58, 0x81, 0x36, 0xe0, 0x0f, 0xb7, 0xb7, 0x9e, 0x7a, 0x8d, 0x8e, 0x90, 0x0e, 0xa4, 0x6b, 0xc6, 0x5d, 0x55, 0x4f, 0x63, 0x86, 0x33, 0x61, 0x57, 0x18, 0xeb, 0xa6, 0x38, 0x4a, 0x91, 0xcf, 0xf0, 0x1f, 0xb8, 0xd2, 0x15, 0x7f, 0x30, 0x68, 0xfd, 0xe7, 0xb3, 0x8c, 0x8e, 0xbd, 0xb7, 0x70, 0xa7, 0x55, 0xb8, 0xf6, 0x47, 0x29, 0x14, 0x97, 0x62, 0x9d, 0x1b, 0xae, 0x2c, 0xf6, 0x66, 0x7c, 0x39, 0x1b, 0xe3, 0xb4, 0xdc, 0xf6, 0x02, 0x05, 0xb3, 0x61, 0x27, 0xf6, 0xbf, 0xae, 0xf8, 0x80, 0x4e, 0x60, 0xbc, 0xf5, 0x47, 0x45, 0x34, 0xcf, 0xe7, 0xdd, 0x49, 0x0a, 0xe8, 0x25, 0x83, 0xdd, 0xa5, 0xd8, 0x43, 0x32, 0xbb, 0x53, 0xaf, 0x4d, 0xaf, 0xab, 0x56, 0xbd, 0x23, 0xa4, 0xe3, 0x92, 0x3f, 0x9c, 0x73, 0xad, 0xf0, 0xa8, 0xa4, 0x68, 0xfd, 0x5e, 0x83, 0xee, 0xad, 0xff, 0x75, 0xa2, 0xc6, 0x1f, 0x3c, 0x61, 0xde, 0x6d, 0x5d, 0xce, 0xcb, 0xdd, 0x47, 0x37, 0x2e, 0xf9, 0x83, 0x11, 0x9c, 0xf9, 0x71, 0x25, 0x83, 0x75, 0x7f, 0xdf, 0xbf, 0x9e, 0xcc, 0xaf, 0x31, 0xbb, 0xbf, 0xe7, 0xed, 0x8e, 0x2e, 0xfa, 0xa3, 0x9f, 0xf1, 0xda, 0x56, 0x5a, 0xe6, 0x73, 0x1c, 0xc1, 0x1c, 0xdd, 0x80, 0x4c, 0xaf, 0x5b, 0x3f, 0x9f, 0xd7, 0xf7, 0xfa, 0x99, 0xff, 0x7a, 0xde, 0x6d, 0x5d, 0xce, 0xa6, 0xdb, 0x55, 0xf9, 0xbc, 0xad, 0xb4, 0x74, 0xc9, 0x1f, 0xbd, 0x74, 0x03, 0xd6, 0x36, 0x17, 0x73, 0x3f, 0x55, 0x68, 0x04, 0xe0, 0x1e, 0xab, 0x10, 0x67, 0xa4, 0xe5, 0x7b, 0xfe, 0x52, 0x40, 0x4f, 0x0a, 0xdb, 0xad, 0x27, 0x4c, 0xba, 0xf5, 0x4d, 0xaf, 0xd7, 0xf7, 0xbf, 0xca, 0x1d, 0x7f, 0xbc, 0xdd, 0x2a, 0x44, 0x19, 0x23, 0x67, 0xf4, 0xd1, 0x11, 0x2c, 0xba, 0x0a, 0xbb, 0xd0, 0x7b, 0xed, 0x8f, 0xbf, 0x6d, 0x72, 0xf9, 0x6c, 0xc7, 0x98, 0x4e, 0x71, 0xb4, 0xe6, 0xf6, 0x1b, 0xdc, 0xf1, 0x47, 0x15, 0x90, 0x19, 0xb3, 0x31, 0x43, 0xfb, 0x65, 0x69, 0x7d, 0x7b, 0x53, 0x75, 0x93, 0x96, 0x71, 0x24, 0x05, 0x98, 0xbe, 0xe7, 0x8f, 0xc6, 0xe6, 0x9e, 0x77, 0x15, 0xae, 0xc4, 0x3b, 0xdf, 0x6b, 0x1c, 0xd7, 0x53, 0xeb, 0x63, 0x37, 0x19, 0x28, 0xfd, 0x3d, 0x8f, 0x22, 0x81, 0xb4, 0xb4, 0xe6, 0xf6, 0x01, 0x7d, 0x63, 0xac, 0x9b, 0xf5, 0x7b, 0x18, 0xbd, 0xe3, 0xbf, 0xce, 0xd6, 0x66, 0x1c, 0x47, 0xd0, 0x0b, 0xd4, 0xe5, 0x7c, 0xdd, 0x45, 0x71, 0x1a, 0x7f, 0xcf, 0xa3, 0xf1, 0x37, 0x8e, 0x5d, 0x65, 0x33, 0xd0, 0xcd, 0x98, 0x49, 0x61, 0xbb, 0xc9, 0x60, 0x7b, 0xa6, 0xf3, 0xbe, 0xbf, 0x99, 0x81, 0x37, 0xdb, 0xec, 0x5b, 0x4f, 0x81, 0x5a, 0xff, 0x6f, 0x3d, 0x6d, 0x77, 0xc6, 0xf7, 0xae, 0xf9, 0xa3, 0xb3, 0x14, 0x52, 0x24, 0xc3, 0xd6, 0x68, 0xdd, 0xbb, 0xd7, 0x79, 0x5d, 0x81, 0x82, 0x7d, 0x9f, 0xfd, 0x6b, 0x1c, 0x51, 0x9e, 0xdc, 0xfa, 0xd3, 0x26, 0xe0, 0x72, 0x79, 0x1e, 0xfb, 0xb3, 0xbf, 0xeb, 0xfa, 0x9c, 0x00, 0xbd, 0x3f, 0x27, 0x40, 0xab, 0xcf, 0xfe, 0xd4, 0xfe, 0x9c, 0x00, 0xad, 0x3e, 0xfb, 0x53, 0xfb, 0x73, 0x02, 0xb4, 0xfa, 0x9c, 0x00, 0xb5, 0x3e, 0x27, 0x40, 0xad, 0xcf, 0x09, 0x50, 0xeb, 0x73, 0x02, 0xd4, 0xfa, 0x9c, 0x00, 0xb5, 0x3e, 0x27, 0x40, 0xad, 0xcf, 0x19, 0x50, 0xdb, 0x73, 0x06, 0xf4, 0xf6, 0x9c, 0xc1, 0x6f, 0xd0, 0xe7, 0x0c, 0x68, 0xe5, 0x39, 0x85, 0xef, 0x94, 0xff, 0x03,
};

static const uint8_t toi_icon_wipe_new[] = {
    // magic
    'T', 'O', 'I', 'f',
    // width (16-bit), height (16-bit)
    0xc0, 0x00, 0x3e, 0x00,
    // compressed data length (32-bit)
    0xac, 0x03, 0x00, 0x00,
    // compressed data
    0xed, 0x92, 0xa1, 0x92, 0xab, 0x30, 0x14, 0x86, 0x33, 0xeb, 0xb0, 0xbc, 0x03, 0xb6, 0x4f, 0x50, 0x43, 0x1f, 0xa0, 0xba, 0x36, 0x1a, 0xdb, 0x17, 0x58, 0x0c, 0x2f, 0x50, 0x8d, 0x8f, 0x03, 0x1b, 0x1b, 0xc9, 0xe0, 0xa2, 0xee, 0x0c, 0x12, 0x5b, 0x49, 0x25, 0x97, 0xe4, 0x10, 0x52, 0xba, 0xa5, 0xbb, 0xed, 0xd2, 0x86, 0xde, 0x7b, 0xce, 0x37, 0xb3, 0x9b, 0x9c, 0x04, 0x96, 0xfd, 0xfe, 0x43, 0xc8, 0x3d, 0xc5, 0x62, 0x16, 0xb2, 0x30, 0x0f, 0x19, 0x32, 0xc5, 0x27, 0x79, 0x4a, 0xa1, 0x59, 0x57, 0x29, 0x74, 0x33, 0xbf, 0x41, 0xa3, 0x8f, 0x30, 0x87, 0xfd, 0x9c, 0x32, 0x8a, 0x26, 0xdd, 0x64, 0x80, 0xf6, 0x66, 0x81, 0x3e, 0xe4, 0x3e, 0x46, 0x73, 0x33, 0x12, 0xa3, 0x7d, 0xc7, 0x7c, 0xde, 0x61, 0x3f, 0x64, 0x14, 0x8d, 0xcd, 0x0e, 0xfd, 0x99, 0xfd, 0x1c, 0x4d, 0x3d, 0x89, 0x3c, 0x44, 0xfb, 0xcb, 0x4e, 0x00, 0x0d, 0x3d, 0x1d, 0x7a, 0xc3, 0x7e, 0xcc, 0x28, 0x1a, 0x7a, 0x3a, 0x9f, 0x93, 0xf6, 0xd1, 0xcd, 0x6b, 0x88, 0xaf, 0xfa, 0x47, 0x2f, 0x2f, 0x03, 0xed, 0x3b, 0x86, 0xa2, 0x7f, 0xb7, 0x5c, 0xd8, 0xdf, 0xa0, 0x11, 0x97, 0x09, 0xa0, 0x0d, 0x07, 0xc4, 0x83, 0xfd, 0x0d, 0xda, 0x70, 0xc1, 0xe0, 0x1f, 0x5d, 0x38, 0xf4, 0xcf, 0x62, 0x34, 0xe1, 0x08, 0xaa, 0xfd, 0xa3, 0x07, 0x67, 0xa0, 0x7f, 0xd7, 0xfe, 0x59, 0xec, 0xfa, 0x1b, 0x78, 0x72, 0x5a, 0x2b, 0x78, 0x62, 0x7b, 0xc2, 0x83, 0x5e, 0x11, 0xd9, 0x5e, 0x2e, 0xfa, 0x5e, 0xc9, 0xc2, 0xba, 0xb9, 0x3c, 0x7d, 0x53, 0x62, 0x46, 0x5d, 0x7f, 0x43, 0x2e, 0x5a, 0x5d, 0x72, 0x6b, 0x7b, 0x72, 0x05, 0xbd, 0x7a, 0x7f, 0x9e, 0x09, 0xf4, 0x54, 0x4e, 0xc7, 0x9d, 0x5a, 0xa9, 0x24, 0xde, 0x1c, 0xba, 0x84, 0xaf, 0x00, 0x9b, 0x75, 0x73, 0xd9, 0x69, 0xdb, 0xd3, 0xda, 0xf6, 0x2a, 0xdf, 0x76, 0xfe, 0x19, 0xff, 0x8b, 0x40, 0x66, 0x5a, 0x76, 0x6a, 0x3b, 0x6d, 0xda, 0xf6, 0xc5, 0x83, 0x8b, 0x94, 0x0e, 0x6a, 0x5d, 0x94, 0x32, 0x93, 0x19, 0x4f, 0xd0, 0xdd, 0x1c, 0x08, 0xaf, 0x77, 0x9d, 0x8c, 0xf7, 0xaa, 0xe4, 0x16, 0x7a, 0xb9, 0x80, 0xfd, 0xad, 0x99, 0xcf, 0x45, 0x11, 0x15, 0xa5, 0xf0, 0x72, 0x71, 0xff, 0xe9, 0xff, 0x0d, 0xcc, 0xbb, 0x71, 0x2d, 0x33, 0xb5, 0x6b, 0xfe, 0xe8, 0x79, 0xdf, 0x5f, 0x64, 0x14, 0xa8, 0xdd, 0x71, 0x67, 0xb3, 0xe8, 0xd7, 0x51, 0xe5, 0xc3, 0x5b, 0xf4, 0x53, 0x07, 0xb8, 0x67, 0xe0, 0x01, 0xdc, 0xba, 0x7e, 0x8a, 0xd4, 0x8d, 0xf6, 0xd2, 0xc0, 0xce, 0x18, 0xd5, 0xb2, 0x52, 0xe8, 0x75, 0x76, 0x55, 0x26, 0x7c, 0x74, 0xe3, 0xcc, 0xbf, 0x75, 0x0f, 0x75, 0x5a, 0x5b, 0xc7, 0x3c, 0xb9, 0x75, 0x8a, 0x74, 0x13, 0xbf, 0xb2, 0xae, 0x73, 0x61, 0xd6, 0x60, 0x96, 0x27, 0xd6, 0x72, 0xe5, 0x4f, 0xfa, 0xd7, 0xcf, 0x54, 0x7e, 0xe5, 0x9f, 0xd6, 0xc6, 0x71, 0x6f, 0x3f, 0x80, 0x4e, 0xc3, 0x8b, 0x52, 0x78, 0x45, 0x09, 0xbb, 0xe3, 0x0e, 0xad, 0x5b, 0x78, 0x00, 0xce, 0xd4, 0x54, 0x0a, 0x4f, 0xad, 0xea, 0xc6, 0xcc, 0xbc, 0xdc, 0x0e, 0x99, 0xb4, 0x45, 0x34, 0xed, 0xdf, 0x64, 0xd3, 0xa5, 0x99, 0x41, 0x47, 0x3d, 0xd9, 0xed, 0xb6, 0x90, 0x46, 0x2e, 0x86, 0xbf, 0x95, 0xaa, 0x8e, 0xf0, 0xd0, 0xbb, 0x05, 0xa6, 0x52, 0x19, 0x03, 0xeb, 0xca, 0xad, 0x4d, 0x02, 0x56, 0x6d, 0x6b, 0x1c, 0x7e, 0xf5, 0x6f, 0xa6, 0xfd, 0xfc, 0x1c, 0x66, 0xbc, 0xe1, 0xf6, 0x2e, 0x50, 0x37, 0xe3, 0xbc, 0x90, 0xce, 0xc9, 0x41, 0xbb, 0xde, 0x1b, 0x77, 0x3c, 0xd0, 0x53, 0xaf, 0x26, 0x35, 0x35, 0x13, 0x0d, 0x3e, 0xaf, 0xfb, 0x1f, 0xdb, 0x2c, 0x22, 0x1d, 0x57, 0xaa, 0xd6, 0xed, 0x44, 0xa9, 0x5c, 0x91, 0xc1, 0x58, 0x09, 0xc6, 0x3a, 0xe7, 0x67, 0xd3, 0x0c, 0x6e, 0x85, 0x07, 0xbf, 0x65, 0x36, 0xed, 0xdf, 0x9e, 0x29, 0x84, 0x07, 0x8e, 0x59, 0xc8, 0x83, 0x29, 0xff, 0x36, 0x4d, 0x44, 0xcf, 0xba, 0x2e, 0xb9, 0xd5, 0xb3, 0x79, 0x80, 0xae, 0x5c, 0xd9, 0x9e, 0xca, 0x61, 0xda, 0x7f, 0xe5, 0x8f, 0xd2, 0x8c, 0x8c, 0x7f, 0x16, 0xf6, 0xef, 0xcd, 0x8a, 0x72, 0x8c, 0x7d, 0x1b, 0xa2, 0x68, 0xb8, 0x16, 0x95, 0x6a, 0xb3, 0xd1, 0x68, 0x8e, 0x53, 0xf8, 0x69, 0xef, 0x7e, 0xf5, 0xdf, 0xa6, 0xb9, 0xb0, 0xe7, 0xf5, 0xc1, 0x4e, 0x38, 0x9c, 0xcb, 0xec, 0x3c, 0xeb, 0x05, 0xfd, 0xdf, 0x74, 0x29, 0x5f, 0x52, 0xf9, 0xed, 0x50, 0x3c, 0x30, 0xdd, 0xde, 0x7d, 0x57, 0x75, 0x73, 0xd3, 0x7f, 0x5b, 0xef, 0x8d, 0x57, 0x99, 0x41, 0x07, 0xce, 0xfb, 0x5d, 0x6a, 0xde, 0x99, 0x8b, 0x86, 0x1f, 0x77, 0xc2, 0x5b, 0x88, 0xfd, 0x78, 0x29, 0xfe, 0xfb, 0x59, 0xef, 0xaa, 0xe1, 0x97, 0x93, 0x6c, 0x6d, 0x4e, 0xfb, 0x6f, 0xdb, 0xd3, 0xba, 0x6e, 0xea, 0xfd, 0x69, 0x6d, 0x76, 0xc6, 0xb7, 0xe9, 0xd4, 0x07, 0x99, 0x75, 0x29, 0xa7, 0x70, 0x6a, 0xd2, 0x72, 0x0b, 0x21, 0x4b, 0xf1, 0x9f, 0x0b, 0x33, 0xeb, 0x95, 0x6f, 0xbb, 0x72, 0x65, 0xec, 0xf2, 0xe4, 0x3b, 0xff, 0xe7, 0x75, 0x5a, 0x9b, 0x79, 0x67, 0x21, 0x0f, 0x4c, 0x02, 0x43, 0xa5, 0x45, 0xb4, 0x0c, 0xfb, 0x9d, 0x7f, 0xba, 0x94, 0x04, 0x8c, 0x49, 0xe1, 0xd9, 0x1e, 0x0f, 0xc6, 0xd3, 0x3c, 0xe5, 0x5f, 0x4f, 0xf6, 0x60, 0x57, 0x66, 0xe3, 0xe9, 0xe6, 0x41, 0x7d, 0x30, 0xe9, 0xb6, 0xed, 0x71, 0x77, 0x9e, 0x25, 0xfa, 0x9f, 0x23, 0x35, 0x99, 0xa9, 0xb5, 0xf0, 0x84, 0xc7, 0x93, 0xb1, 0x7b, 0xcb, 0xed, 0x53, 0x57, 0xfe, 0xbb, 0x04, 0xfe, 0x19, 0xff, 0xef, 0x05, 0xe9, 0x8b, 0x6d, 0xd0, 0xbf, 0x53, 0xff, 0x31, 0xfa, 0x77, 0x67, 0x5f, 0x27, 0xf0, 0xc6, 0xfe, 0x2b, 0xff, 0xb8, 0x3b, 0xee, 0x8a, 0xf2, 0x9d, 0xfd, 0xbf, 0x77, 0x02, 0xef, 0x08, 0xb9, 0x28, 0x46, 0xd1, 0xc9, 0x0b, 0xa1, 0x84, 0x60, 0x02, 0xee, 0x20, 0x57, 0x8a, 0xc5, 0xe8, 0xe5, 0x45, 0x7c, 0x90, 0xab, 0xc5, 0x36, 0xe8, 0xe6, 0x15, 0x90, 0xc9, 0x62, 0x14, 0xed, 0x3c, 0x19, 0x4a, 0x6e, 0x16, 0x1a, 0x7a, 0x2e, 0xe4, 0xdb, 0x42, 0x47, 0x2e, 0xed, 0xeb, 0x04, 0x28, 0x9a, 0x7a, 0x02, 0x94, 0xfc, 0xb8, 0xd8, 0x06, 0x7d, 0xcd, 0x0d, 0xb9, 0xab, 0x58, 0xcc, 0x28, 0x3a, 0x9b, 0x8d, 0x0f, 0xf2, 0x40, 0x61, 0x02, 0xb3, 0x40, 0xc9, 0x2f, 0x8a, 0x6d, 0xd0, 0xe0, 0x6f, 0x20, 0x33, 0x14, 0x66, 0xf0, 0x20, 0x1f, 0x64, 0xb6, 0xc2, 0x0c, 0xee, 0x80, 0x32, 0x4a, 0x9e, 0x52, 0x5d, 0x0a, 0x94, 0x85, 0x39, 0x45, 0xc7, 0x5f, 0xc9, 0xc1, 0xfc, 0x9d, 0x33, 0xff, 0x17,
};

static const uint8_t toi_icon_install_red[] = {
    // magic
    'T', 'O', 'I', 'f',
    // width (16-bit), height (16-bit)
    0xc0, 0x00, 0x3e, 0x00,
    // compressed data length (32-bit)
    0x1f, 0x03, 0x00, 0x00,
    // compressed data
    0xed, 0xd2, 0xaf, 0x92, 0xab, 0x30, 0x18, 0x05, 0xf0, 0x4c, 0x1d, 0xb6, 0xef, 0x80, 0xbd, 0xf7, 0x05, 0x30, 0xf0, 0x00, 0x57, 0x63, 0xa3, 0x6b, 0xf7, 0x05, 0x36, 0x66, 0x5f, 0xa0, 0x1a, 0x1f, 0x07, 0x36, 0x36, 0x92, 0xc1, 0xa1, 0xee, 0x4c, 0x25, 0x16, 0x09, 0x32, 0x4b, 0x48, 0x29, 0xd0, 0xd2, 0xed, 0x3f, 0x68, 0xda, 0xd9, 0xf3, 0x1d, 0x43, 0x49, 0x48, 0x67, 0x7e, 0x27, 0x84, 0xdc, 0x32, 0x9c, 0x71, 0x9f, 0xfb, 0x89, 0xcf, 0x91, 0x73, 0xf9, 0x24, 0x8b, 0x0c, 0x64, 0x6d, 0xb5, 0xd0, 0xdc, 0xf9, 0x00, 0xa2, 0xf7, 0x64, 0x0e, 0xfd, 0x84, 0x72, 0x0a, 0x49, 0x3b, 0x1d, 0x40, 0x6f, 0x96, 0xd0, 0xbb, 0xec, 0x19, 0xe4, 0x66, 0x0c, 0x83, 0xbe, 0xe5, 0x7c, 0xde, 0xa0, 0xef, 0x73, 0x0a, 0xb1, 0xd9, 0x43, 0xaf, 0xd3, 0x4f, 0x20, 0xb5, 0x50, 0x12, 0x1f, 0xfa, 0xaf, 0xdd, 0x00, 0x84, 0x16, 0x0f, 0xfd, 0x41, 0x9f, 0x71, 0x0a, 0xa1, 0xc5, 0xf3, 0x79, 0x56, 0x1f, 0x36, 0xcf, 0x09, 0x9b, 0xf4, 0x87, 0xcb, 0xd3, 0x02, 0x7d, 0xcb, 0xa1, 0xf0, 0xb7, 0x9b, 0x23, 0xfd, 0x00, 0x22, 0x36, 0x1b, 0x80, 0x86, 0x85, 0xb0, 0x83, 0x7e, 0x00, 0x0d, 0x1b, 0x39, 0xf8, 0xc3, 0xc2, 0xa2, 0x3f, 0x67, 0x90, 0xb0, 0x14, 0xda, 0xfa, 0xc3, 0xc1, 0x5a, 0x7e, 0x9f, 0xbf, 0x70, 0x75, 0x4e, 0x9f, 0x6d, 0xf9, 0x73, 0x66, 0xf3, 0xff, 0xcb, 0xb0, 0xf6, 0x6a, 0x2f, 0xdd, 0x3c, 0x4f, 0x5f, 0xb5, 0x63, 0xd4, 0x87, 0xcf, 0x96, 0xc2, 0x38, 0xb5, 0xe9, 0x5f, 0x7b, 0x5a, 0x20, 0xcd, 0x7e, 0xad, 0xbf, 0x55, 0xfd, 0x79, 0xfc, 0xf3, 0x58, 0x9f, 0x51, 0x7c, 0xbc, 0xa5, 0xbf, 0xff, 0xfe, 0xfe, 0xc5, 0x16, 0xfe, 0xf3, 0xfa, 0x27, 0x32, 0xdd, 0xa4, 0x1b, 0xe9, 0x1c, 0xef, 0x6e, 0xdf, 0x67, 0xd2, 0x49, 0x64, 0xff, 0x46, 0x3a, 0xe6, 0x8c, 0x53, 0x7f, 0xbd, 0xa6, 0x77, 0x0f, 0x7d, 0xe1, 0x7f, 0xde, 0x3f, 0xcd, 0xf4, 0x73, 0x1e, 0xe7, 0x7f, 0x55, 0x64, 0x64, 0x6a, 0x6f, 0xd8, 0xc1, 0x6e, 0xdd, 0xbd, 0x6f, 0xb4, 0xb7, 0xa6, 0x83, 0x32, 0x54, 0xa3, 0xe9, 0x5a, 0x48, 0x64, 0xb1, 0x1d, 0xee, 0xee, 0x8c, 0xe1, 0x7f, 0xc9, 0xdf, 0xbc, 0xe9, 0x47, 0x7c, 0x99, 0x9d, 0x8d, 0xe7, 0x68, 0xaa, 0xff, 0xba, 0x81, 0x69, 0x7f, 0xe1, 0x1e, 0x9f, 0x52, 0x7b, 0x46, 0x19, 0xfe, 0x97, 0xfc, 0x5b, 0xc5, 0x2a, 0x8f, 0x3b, 0xd9, 0x32, 0x1c, 0xba, 0xe5, 0xb1, 0x74, 0xd2, 0xcc, 0x7c, 0x95, 0xc7, 0xdc, 0xdf, 0xad, 0xcb, 0x70, 0x6f, 0x1d, 0x95, 0x61, 0x19, 0xe6, 0xff, 0xf4, 0xee, 0xfd, 0xb7, 0x51, 0x1e, 0xa7, 0x59, 0xd3, 0x5b, 0x64, 0xce, 0x84, 0xff, 0x75, 0xfe, 0xc6, 0x50, 0xdb, 0x9a, 0xdf, 0xfa, 0x9e, 0xa7, 0x9b, 0xf6, 0xce, 0x0b, 0xb3, 0xd2, 0x28, 0x46, 0xc5, 0x56, 0x3a, 0xe6, 0x57, 0x1e, 0xb7, 0xbe, 0x1f, 0xfd, 0xa9, 0xba, 0xa1, 0xee, 0xc6, 0x73, 0x5f, 0x3a, 0xa6, 0x0d, 0xf8, 0x5f, 0xe3, 0xdf, 0x19, 0x73, 0x3f, 0x91, 0xbd, 0xcf, 0xde, 0xb0, 0xe9, 0x46, 0xb7, 0x31, 0xce, 0xa9, 0xbf, 0x91, 0xee, 0x4e, 0x31, 0xdd, 0x29, 0x05, 0xff, 0x6b, 0xfc, 0xcb, 0xb0, 0x5f, 0x1d, 0xfa, 0x54, 0x42, 0xed, 0xa7, 0x0c, 0xd3, 0x6c, 0x68, 0x36, 0xed, 0x2f, 0x9d, 0xdd, 0xba, 0xa8, 0xcc, 0xf9, 0xf0, 0x7f, 0xdc, 0x5f, 0xb8, 0x43, 0x4b, 0xa5, 0xf2, 0xf8, 0xbc, 0xbf, 0x70, 0xcb, 0x50, 0x9d, 0x0c, 0xfc, 0x1f, 0xf1, 0x37, 0x77, 0xba, 0xd8, 0xf6, 0x2d, 0x48, 0x67, 0xda, 0xff, 0xd0, 0x54, 0x54, 0x86, 0xbb, 0x75, 0x9a, 0xa5, 0x1b, 0xf8, 0x3f, 0xee, 0x2f, 0xdc, 0xce, 0x5b, 0x7c, 0x55, 0x62, 0x28, 0x7e, 0xec, 0x6f, 0xce, 0xa9, 0xbd, 0xce, 0x55, 0x3a, 0x2f, 0xed, 0x4f, 0xdf, 0xc1, 0x7f, 0xb7, 0xd6, 0xf7, 0xb9, 0x93, 0x1a, 0xef, 0xcc, 0xff, 0x98, 0xdb, 0x9e, 0xc8, 0x61, 0x1f, 0x95, 0xe8, 0x4e, 0x29, 0xb6, 0x2f, 0xec, 0x4f, 0x39, 0x7b, 0x07, 0x7f, 0x63, 0x5a, 0x7b, 0x69, 0x26, 0x9d, 0x74, 0x63, 0xbe, 0xda, 0xad, 0xc7, 0xf7, 0xbb, 0xf6, 0x8a, 0x4a, 0x9f, 0xb4, 0xef, 0xa3, 0x39, 0x55, 0xb8, 0xd2, 0x29, 0x2a, 0xa5, 0x5e, 0xd8, 0xdf, 0x27, 0xe4, 0x1d, 0xfc, 0x13, 0x59, 0x09, 0x35, 0x9a, 0xda, 0xeb, 0xdd, 0xba, 0x1b, 0xae, 0x54, 0xf1, 0xa1, 0xf7, 0x9a, 0x53, 0x0f, 0x13, 0xbd, 0xae, 0x3f, 0x69, 0x86, 0xd3, 0xd7, 0xf7, 0xd7, 0xc9, 0xe3, 0xde, 0xb5, 0x0c, 0xc7, 0x6a, 0xdd, 0x9a, 0xf6, 0xd7, 0xca, 0x7d, 0x5b, 0x7a, 0x27, 0xfc, 0xe7, 0x8a, 0xf8, 0x92, 0x8e, 0x74, 0x12, 0x39, 0xb9, 0xe6, 0x0a, 0xb7, 0x5f, 0x11, 0xae, 0xde, 0x69, 0xd3, 0xf6, 0x5a, 0xff, 0xa6, 0x01, 0x1f, 0xb1, 0xa7, 0xdf, 0xf8, 0x07, 0xb0, 0xb0, 0xea, 0xcf, 0x60, 0x61, 0x4f, 0xbf, 0x6d, 0x00, 0x1e, 0x56, 0xfd, 0xd1, 0x80, 0x5d, 0xfd, 0xc6, 0x9f, 0xc2, 0xe4, 0x89, 0xa1, 0x84, 0xa0, 0x01, 0x7b, 0x21, 0x13, 0xc3, 0x19, 0x5c, 0x9e, 0x94, 0x15, 0x99, 0x1c, 0x1e, 0xc0, 0xe6, 0x19, 0x21, 0x67, 0x87, 0x53, 0xe8, 0x2c, 0x1c, 0x4a, 0x7e, 0x1c, 0x08, 0x2d, 0x1b, 0x72, 0x71, 0x60, 0x64, 0x53, 0xbf, 0x6d, 0x80, 0x42, 0x6a, 0x81, 0x50, 0x72, 0xf5, 0xf0, 0x00, 0x5e, 0x73, 0x87, 0xdc, 0x34, 0x9c, 0x71, 0x0a, 0xb3, 0xd9, 0xb2, 0x22, 0x77, 0x0c, 0x1a, 0x98, 0x25, 0x94, 0x3c, 0x30, 0x3c, 0x80, 0xe0, 0x23, 0x21, 0x33, 0x0c, 0x3a, 0xb8, 0x33, 0x2b, 0x32, 0xdb, 0xa0, 0x83, 0x1b, 0x42, 0x39, 0x25, 0x8b, 0x4c, 0xd3, 0x02, 0xe5, 0x7e, 0x42, 0x61, 0x7c, 0x9a, 0xc4, 0xc8, 0xdf, 0x78, 0xe7, 0xbf, 0x01,
};

static const uint8_t toi_icon_install_green[] = {
    // magic
    'T', 'O', 'I', 'f',
    // width (16-bit), height (16-bit)
    0xc0, 0x00, 0x3e, 0x00,
    // compressed data length (32-bit)
    0x2e, 0x03, 0x00, 0x00,
    // compressed data
    0xed, 0xd2, 0xaf, 0x72, 0xea, 0x40, 0x14, 0x06, 0xf0, 0x55, 0x4c, 0x14, 0x6a, 0xdd, 0x4a, 0x24, 0x95, 0xd7, 0x11, 0x59, 0x13, 0x17, 0xb1, 0xaf, 0xc0, 0x23, 0x24, 0x2a, 0xb5, 0x98, 0x4e, 0x44, 0x5f, 0x00, 0x09, 0x2e, 0xb6, 0x57, 0x45, 0xee, 0x1a, 0xa2, 0x22, 0x78, 0x84, 0xf0, 0x06, 0x99, 0xa8, 0xbd, 0x77, 0x39, 0xdd, 0x49, 0x80, 0xb4, 0xe5, 0x4f, 0xc8, 0x86, 0xf6, 0x9c, 0x4f, 0x14, 0x92, 0x65, 0x3b, 0xf3, 0xfb, 0x0e, 0x21, 0x97, 0x0c, 0x75, 0xd8, 0x0a, 0xf3, 0x65, 0x24, 0xb9, 0xcb, 0xb0, 0x35, 0xda, 0xda, 0x69, 0x01, 0x77, 0xfe, 0xda, 0x74, 0xb2, 0xf7, 0xe8, 0x68, 0xad, 0x03, 0xb6, 0x46, 0xbf, 0x0e, 0x22, 0xaf, 0xb1, 0xa7, 0x0e, 0xca, 0x75, 0x17, 0x3a, 0xba, 0x4c, 0x9f, 0x49, 0x34, 0xeb, 0x38, 0xf2, 0x02, 0xfd, 0x35, 0x7a, 0xd9, 0x6b, 0x00, 0xa5, 0xee, 0x16, 0x81, 0xfa, 0xc3, 0x6e, 0x80, 0xad, 0xd1, 0xe8, 0xce, 0x91, 0x5f, 0xe8, 0x4b, 0xf4, 0xb1, 0xd7, 0x00, 0x75, 0xd0, 0xa6, 0x9f, 0xd0, 0x51, 0x9b, 0x3f, 0xba, 0xf4, 0x97, 0x16, 0xfd, 0x35, 0xaa, 0xf4, 0x18, 0x79, 0xe2, 0x8f, 0x26, 0xbd, 0x06, 0xf5, 0x87, 0xd4, 0x00, 0x6a, 0xf4, 0x1f, 0x3a, 0x42, 0x7d, 0xbb, 0x41, 0xff, 0x21, 0xf8, 0x33, 0x89, 0x12, 0x96, 0x22, 0xf7, 0xfe, 0xe8, 0x60, 0x2d, 0xbf, 0xcf, 0xdf, 0xf5, 0x74, 0x4e, 0x3f, 0xdb, 0xf2, 0x67, 0xd2, 0xe6, 0xff, 0x17, 0x55, 0x11, 0x15, 0xd1, 0x7c, 0xdc, 0x9f, 0xbe, 0xda, 0x0f, 0xa8, 0x37, 0x3f, 0xdb, 0x09, 0x1d, 0xd9, 0xdd, 0xc6, 0x22, 0xd2, 0x02, 0x81, 0xff, 0x5b, 0xfd, 0x6d, 0xa7, 0x0b, 0xff, 0x38, 0xd7, 0x77, 0x24, 0x21, 0xfa, 0xdb, 0xf1, 0x4f, 0x42, 0xf4, 0xef, 0xd6, 0x7f, 0xba, 0x9b, 0x8f, 0xe7, 0x63, 0x9e, 0x1d, 0x9f, 0xd6, 0xcf, 0x03, 0x9f, 0x67, 0xd3, 0x5d, 0xfd, 0x84, 0x67, 0x70, 0xc7, 0xa9, 0xbf, 0x7e, 0xa7, 0x4f, 0x37, 0x7d, 0xd1, 0xff, 0x73, 0xff, 0xc0, 0xd7, 0x9f, 0xe3, 0xfc, 0xe5, 0xad, 0x4c, 0x41, 0xa6, 0x88, 0xf8, 0xa6, 0x3e, 0xbb, 0xa4, 0xe6, 0xb9, 0xd6, 0x86, 0x0e, 0x44, 0xa5, 0x0e, 0xc6, 0xb4, 0x30, 0xdd, 0x25, 0x61, 0xf3, 0xb4, 0x31, 0x46, 0xff, 0xef, 0xfc, 0xe1, 0x49, 0x3d, 0xcf, 0xaf, 0x70, 0x32, 0x09, 0x0f, 0x9f, 0x6f, 0x67, 0xba, 0x81, 0x76, 0x7f, 0xd7, 0x3b, 0xbe, 0xa5, 0x88, 0x40, 0x19, 0xfd, 0xbf, 0xf3, 0xd7, 0x93, 0xbe, 0xc7, 0xb9, 0x91, 0x15, 0x55, 0xd3, 0x2d, 0xce, 0x79, 0x16, 0xf8, 0xf0, 0xab, 0x38, 0x67, 0xab, 0xe5, 0x1f, 0x51, 0xc1, 0xb7, 0x32, 0x15, 0x95, 0xa8, 0x5e, 0xde, 0xf4, 0x69, 0xf8, 0x6d, 0x99, 0xc6, 0x79, 0xe0, 0x27, 0x61, 0x99, 0xc2, 0x9d, 0xe8, 0x7f, 0x9e, 0x3f, 0x18, 0xfe, 0xb7, 0xa5, 0xf0, 0x5d, 0xef, 0xf9, 0x7c, 0x0c, 0x3b, 0x0f, 0x6f, 0x5c, 0xaf, 0x4c, 0x93, 0x90, 0x67, 0xf0, 0x2d, 0xce, 0xf5, 0x3b, 0xd8, 0x7c, 0x88, 0x6e, 0xc8, 0x6c, 0x3c, 0x5b, 0xf1, 0x0d, 0xb4, 0x81, 0xfe, 0xe7, 0xf8, 0x1b, 0x63, 0xb6, 0x7a, 0x72, 0x6a, 0x1f, 0x30, 0xd4, 0xdd, 0xe8, 0x36, 0x0e, 0x73, 0xea, 0x0f, 0xd2, 0xf0, 0x77, 0xba, 0x83, 0xee, 0x94, 0x42, 0xff, 0x73, 0xfc, 0x45, 0x55, 0xbf, 0x6d, 0xfa, 0x6c, 0x67, 0xea, 0x63, 0x44, 0x15, 0xf8, 0x4d, 0xb3, 0x76, 0x7f, 0x9e, 0x2d, 0x69, 0xfa, 0x0e, 0xf7, 0xa3, 0xff, 0xed, 0xfe, 0xae, 0xd7, 0xb4, 0x54, 0x2a, 0xce, 0x3f, 0xf7, 0x77, 0x3d, 0x51, 0xa9, 0x93, 0x41, 0xff, 0x5b, 0xfc, 0x61, 0xa7, 0x93, 0xb0, 0x6e, 0x81, 0x6f, 0xda, 0xfd, 0x4d, 0x53, 0x65, 0x2a, 0xaa, 0x25, 0x0d, 0xfc, 0xf9, 0x18, 0xfd, 0x6f, 0xf7, 0x77, 0x3d, 0xe3, 0xfd, 0xfc, 0xba, 0x9d, 0x35, 0xc5, 0x8f, 0xfd, 0xe1, 0x9e, 0x22, 0x32, 0xae, 0x3c, 0x43, 0xff, 0x5b, 0xfd, 0x97, 0x54, 0xef, 0xb3, 0x91, 0x3a, 0x3c, 0xf9, 0xf2, 0x06, 0xdb, 0x3e, 0xdd, 0x35, 0xfb, 0xd8, 0xce, 0xcc, 0x2d, 0x49, 0x38, 0x64, 0xff, 0xc9, 0xe2, 0x11, 0xfc, 0xc1, 0xb4, 0x88, 0x02, 0x9f, 0x67, 0xf3, 0x31, 0xfc, 0x6a, 0x49, 0x3f, 0xf6, 0x7b, 0x03, 0xe7, 0x8a, 0x28, 0x7d, 0xd7, 0x37, 0x41, 0x1f, 0xfa, 0x56, 0xd7, 0xe3, 0x59, 0xfa, 0x57, 0xa9, 0x01, 0xfb, 0x4b, 0x42, 0x1e, 0xc1, 0xff, 0xc9, 0xd9, 0xce, 0xd4, 0xc1, 0x14, 0x51, 0xed, 0x66, 0x36, 0x5c, 0xa9, 0x24, 0xd4, 0x67, 0xe1, 0x56, 0x33, 0x65, 0x3a, 0x5c, 0x7f, 0x42, 0x1e, 0xc3, 0x5f, 0x27, 0xce, 0x6b, 0x57, 0x51, 0x1d, 0xaa, 0x99, 0x77, 0xda, 0x5f, 0x2b, 0xd7, 0x6d, 0xe9, 0x93, 0x03, 0xf7, 0x17, 0x36, 0x1b, 0xb8, 0x2c, 0xcf, 0xaf, 0x3c, 0xe3, 0xd9, 0x74, 0xd7, 0xf6, 0xce, 0xf5, 0x5c, 0xaf, 0x7e, 0xe3, 0x7a, 0xfa, 0xa4, 0x4d, 0xdb, 0x33, 0x22, 0xc9, 0x7e, 0x1e, 0xc7, 0xff, 0x67, 0x85, 0x7c, 0x0c, 0x13, 0x68, 0x61, 0x21, 0xc2, 0xf8, 0x4f, 0x16, 0xa8, 0xd1, 0x7f, 0x48, 0x63, 0x50, 0xa3, 0xf7, 0x08, 0x42, 0xb0, 0x01, 0x7b, 0x21, 0x47, 0xc3, 0x04, 0x9a, 0xf4, 0x18, 0x41, 0x4e, 0x06, 0x55, 0xfa, 0x0b, 0x69, 0x99, 0xc9, 0x02, 0x5d, 0xfa, 0x09, 0x75, 0x48, 0xeb, 0x30, 0x89, 0x36, 0x3d, 0x44, 0x92, 0x4f, 0x87, 0x09, 0xf4, 0xb9, 0x73, 0x04, 0xf9, 0x72, 0xb0, 0x01, 0x9b, 0xfa, 0xd8, 0x80, 0x6d, 0x7d, 0x6c, 0xc0, 0xb6, 0xfe, 0xbe, 0x01, 0x89, 0x5e, 0x1d, 0x47, 0x92, 0x8b, 0x66, 0xb2, 0x40, 0xb3, 0xee, 0x42, 0x1d, 0x72, 0xc5, 0x30, 0x81, 0x72, 0x1d, 0x44, 0x90, 0x1b, 0x06, 0x3b, 0xb8, 0x2d, 0xa4, 0x83, 0xc1, 0x0e, 0xae, 0xdb, 0x7b, 0xea, 0x90, 0xce, 0x86, 0x49, 0x14, 0x3d, 0x5f, 0x9e, 0x09, 0x72, 0x97, 0xc1, 0x16, 0xbe, 0xcb, 0xa5, 0x3b, 0xff, 0x0f,
};

