syntax = "proto2";
package hw.trezor.messages.nostr;

// Sugar for easier handling in Java
option java_package = "com.satoshilabs.trezor.lib.protobuf";
option java_outer_classname = "TrezorMessageNostr";

/**
 * Request: PublicKey at the specified index
 * @start
 * @next NostrPublicKey
 */
message NostrGetPublicKey {
    repeated uint32 address_n = 1;              // BIP-32 path to derive the key from master node
    optional bool show_display = 2;             // optionally show on display before sending the result
}

/**
 * Response: NostrPublicKey for the given index
 * @end
 */
message NostrPublicKey {
    optional string publickey = 1;
    optional string npub = 2;
}

/**
 * Request: Ask device to sign Nostr event
 * @start
 * @next NostrSignEvent
 */
message NostrSignEvent {
    repeated uint32 address_n = 1;                 // BIP-32 path to derive the key from master node
    required bytes event = 2;                      // serialized raw transaction
}

/**
 * Response: Contains nostr event signature
 * @end
 */
message NostrSignedEvent {
    required bytes event = 1;
}

message NostrSignSchnorr {
    repeated uint32 address_n = 1;
    required string hash = 2;
}

message NostrSignedSchnorr {
    required bytes signature = 1;
}

message NostrEncryptMessage {
    repeated uint32 address_n = 1;                // BIP-32 path to derive the key from master node
    required string pubkey = 2;                   // pubkey
    required string msg = 3;                      // message
    optional bool show_display = 4;               // optionally show on display before sending the result
}

message NostrEncryptedMessage {
    required string msg = 1;
}

message NostrDecryptMessage {
    repeated uint32 address_n = 1;                // BIP-32 path to derive the key from master node
    required string pubkey = 2;                   // pubkey
    required string msg = 3;                      // message
    optional bool show_display = 4;               // optionally show on display before sending the result
}

message NostrDecryptedMessage {
    required string msg = 1;
}
